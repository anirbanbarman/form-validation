{"version":3,"sources":["logo.svg","components/form.js","App.js","reportWebVitals.js","index.js"],"names":["onlyNumberRegex","RegExp","onlyCharactersRegex","onlySpecialCharactersregex","characterWithSpecialCharactersregex","validateForm","errors","valid","Object","values","forEach","val","length","countErrors","count","Form","props","handleChange","event","preventDefault","target","name","value","state","onlyNumber","test","onlyCharacters","onlySpecialCharacters","characterWithSpecialCharacters","setState","handleChangeRadio","console","log","radio","handleChangeDropdown","select","handleSubmit","formValid","errorCount","this","className","onSubmit","noValidate","htmlFor","type","onChange","checked","required","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e497db86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport './form.css';\r\n\r\n\r\nconst onlyNumberRegex = new RegExp('^[0-9]+$');\r\nconst onlyCharactersRegex = new RegExp('^[aA-zZ\\s]+$');\r\nconst onlySpecialCharactersregex = new RegExp('^[!@#\\$%\\^\\&*\\)\\(+=._-]+$');\r\nconst characterWithSpecialCharactersregex = new RegExp('^(([!@#\\$%\\^\\&*\\)\\(+=._-]+[a-zA-Z]*)|([a-zA-Z]+[!@#\\$%\\^\\&*\\)\\(+=._-]*))+$')\r\n\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nconst countErrors = (errors) => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(\r\n        (val) => val.length > 0 && (count = count + 1)\r\n    );\r\n    return count;\r\n}\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onlyNumber: null,\r\n            onlyCharacters: null,\r\n            onlySpecialCharacters: null,\r\n            characterWithSpecialCharacters: null,\r\n            radio: null,\r\n            select: null,\r\n\r\n            errors: {\r\n                onlyNumber: '',\r\n                onlyCharacters: '',\r\n                onlySpecialCharacters: \"\",\r\n                characterWithSpecialCharacters: \"\",\r\n                radio: \"\",\r\n                select: \"\"\r\n\r\n            }\r\n        };\r\n    }\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        debugger\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n\r\n            case 'onlyNumber':\r\n                errors.onlyNumber =\r\n                    onlyNumberRegex.test(value)\r\n                        ? ''\r\n                        : 'Only numbers are allowed';\r\n                break;\r\n            case 'onlyCharacters':\r\n                errors.onlyCharacters =\r\n                    onlyCharactersRegex.test(value)\r\n                        ? ''\r\n                        : 'Only characters are allowed for this field ';\r\n                break;\r\n\r\n            case 'onlySpecialCharacters':\r\n                errors.onlySpecialCharacters =\r\n                    onlySpecialCharactersregex.test(value)\r\n                        ? ''\r\n                        : 'Only Special characters are allowed for this field ';\r\n                break;\r\n\r\n            case 'characterWithSpecialCharacters':\r\n                errors.characterWithSpecialCharacters =\r\n                    characterWithSpecialCharactersregex.test(value)\r\n                        ? ''\r\n                        : 'Characters With Special characters are allowed for this field ';\r\n                break;\r\n           \r\n            default:\r\n                break;\r\n        } \r\n\r\n        this.setState({ errors, [name]: value });\r\n    }\r\n\r\n\r\n    handleChangeRadio=(event)=>{\r\n    console.log(event.target.value)\r\n    this.state.errors.radio =\"\"\r\n    this.setState({...this.state, radio: event.target.value})\r\n    }\r\n    handleChangeDropdown=(event)=>{\r\n        console.log(event.target.value)\r\n        this.state.errors.select =\"\"\r\n        this.setState({...this.state, select: event.target.value})\r\n        }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.select) {\r\n            this.state.errors.select = \"\"\r\n        }\r\n        else {\r\n            this.state.errors.select = \" select from dropdown\"\r\n        }\r\n        if (this.state.radio) {\r\n            this.state.errors.radio = \"\"\r\n        }\r\n        else {\r\n            this.state.errors.radio = \"select from Radio\"\r\n        }\r\n\r\n        this.setState({ formValid: validateForm(this.state.errors) });\r\n        this.setState({ errorCount: countErrors(this.state.errors) });\r\n    }\r\n\r\n    render() {\r\n        const { errors, formValid } = this.state;\r\n\r\n        return (\r\n            <div className='wrapper'>\r\n                <div className='form-wrapper'>\r\n                    <h2>Form Validation</h2>\r\n                    <form onSubmit={this.handleSubmit} noValidate>\r\n\r\n                        <div className='onlyNumber'>\r\n                            <label htmlFor=\"onlyNumber\">Only Numbers</label>\r\n                            <input type='text' name='onlyNumber' onChange={this.handleChange} noValidate />\r\n                            {errors.onlyNumber.length > 0 &&\r\n                                <span className='error'>{errors.onlyNumber}</span>}\r\n                        </div>\r\n\r\n                        <div className='onlyCharacters'>\r\n                            <label htmlFor=\"onlyCharacters\">Only Characters</label>\r\n                            <input type='text' name='onlyCharacters' onChange={this.handleChange} noValidate />\r\n                            {errors.onlyCharacters.length > 0 &&\r\n                                <span className='error'>{errors.onlyCharacters}</span>}\r\n                        </div>\r\n\r\n                        <div className='onlySpecialCharacters'>\r\n                            <label htmlFor=\"onlySpecialCharacters\">Only Special Characters</label>\r\n                            <input type='text' name='onlySpecialCharacters' onChange={this.handleChange} noValidate />\r\n                            {errors.onlySpecialCharacters.length > 0 &&\r\n                                <span className='error'>{errors.onlySpecialCharacters}</span>}\r\n                        </div>\r\n\r\n                        <div className='characterWithSpecialCharacters'>\r\n                            <label htmlFor=\"characterWithSpecialCharacters\">Characters with Special Characters</label>\r\n                            <input type='text' name='characterWithSpecialCharacters' onChange={this.handleChange} noValidate />\r\n                            {errors.characterWithSpecialCharacters.length > 0 &&\r\n                                <span className='error'>{errors.characterWithSpecialCharacters}</span>}\r\n                        </div>\r\n                        <div >\r\n                            <input type=\"radio\" value=\"value1\" checked={this.state.radio===\"value1\"} name=\"radio\" onChange={this.handleChangeRadio} noValidate /> Value 1\r\n                            <input type=\"radio\" value=\"value2\" checked={this.state.radio===\"value2\"} name=\"radio\" onChange={this.handleChangeRadio} noValidate /> Value 2\r\n                            <input type=\"radio\" value=\"value3\" checked={this.state.radio===\"value3\"} name=\"radio\" onChange={this.handleChangeRadio} noValidate /> Value 3\r\n\r\n                         </div>\r\n                        <div className='characterWithSpecialCharacters'>\r\n                            {errors.radio.length > 0 &&\r\n                                <span className='error'>{errors.radio}</span>}\r\n                        </div>\r\n                        <select\r\n                            required\r\n                            onChange={this.handleChangeDropdown}\r\n                            value={this.state.select || ''}\r\n                        >\r\n                            <option value=''>None</option>\r\n                            <option value='1'>option1</option>\r\n                            <option value='2'>option2</option>\r\n\r\n                        </select> <div className='characterWithSpecialCharacters'>\r\n                            {errors.select.length > 0 &&\r\n                                <span className='error'>{errors.select}</span>}\r\n                        </div>\r\n\r\n                        <div className='submit'>\r\n                            <button>Check </button>\r\n                        </div>\r\n                        {this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form;","import logo from './logo.svg';\n\nimport Form  from \"./components/form\";\n\nfunction App() {\n  return (\n    <div >\n    \n      <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}